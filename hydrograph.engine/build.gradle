apply from: 'version.gradle'

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"
  }
}

subprojects{
apply from: '../version.gradle'
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'maven'
	
	group = 'hydrograph'
	version=version	
	
    sourceSets{
        main.java.srcDir 'src/main/java'
        main.resources.srcDir 'src/main/resources'
        test.java.srcDir 'src/test/java'
    }
	dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
	}
	
	task testJar(type: Jar, dependsOn: classes) {
	classifier = 'tests'
	from sourceSets.test.output
	manifest {
        attributes 'Implementation-Title': archivesBaseName
                //,'Implementation-Version': version
	    }
	    version = null //Version in jar name set to null to keep the name consistent for travis.yml to ftp the jar 
	}
	
	task sourcesJar( type: Jar, dependsOn: classes ) {
    from sourceSets.main.allSource
    classifier = 'sources'
    manifest {
        attributes 'Implementation-Title': archivesBaseName
                //,'Implementation-Version': version
	    }
	    version = null //Version in jar name set to null to keep the name consistent for travis.yml to ftp the jar 
    }
   
}

subprojects{

    artifacts {
	archives testJar
	archives sourcesJar
    }
}

jar {
	manifest {
        attributes 'Implementation-Title': 'hydrograph.engine',
                //'Implementation-Version': version,
                'Main-Class': 'hydrograph.engine.commandline.utilities.HydrographExecution'
    }
    version = null //Version in jar name set to null to keep the name consistent for travis.yml to ftp the jar 
    
    dependsOn { subprojects.jar }
    subprojects.each { proj ->
        from { zipTree(proj.jar.archivePath) }
    }
}

task writePom {
    pom {
        project {
           }
    	}.writeTo("$buildDir/pom.xml")
	}

task wrapper(type: Wrapper) {
  gradleVersion = '1.9'
  distributionUrl = 'http://services.gradle.org/distributions/gradle-1.9-all.zip'
}

repositories {
    mavenCentral()
}