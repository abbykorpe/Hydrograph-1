apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
	
sourceCompatibility = 1.7
version = '0.1'
ext.hadoopVersion = '2.6.0'

ext.commonsIoVersion='2.4'
ext.joptVersion = '4.4'
ext.sqllineVersion='1.1.9'
ext.ivyVersion= '2.3.0'
ext.jlineVersion= '2.10'
ext.slf4jVersion = '1.7.5'
ext.javaassistVerion=  '3.12.1.GA'
ext.linq4jVersion= '0.1.9'
ext.guavaVersion= '14.0.1'
ext.jacksonDatabindVersion= '2.2.2'
ext.jacksonDatatypeGuavaVersion='2.2.2' 
ext.commonsIoVersion= '2.4'
ext.commonsLangVersion= '3.1'
ext.log4jVersion=  '1.2.17'
ext.cascadingVersion= '2.7.0'
ext.c3p0Version= '0.9.2.1'
ext.cascadingBindVersion= '1.0.0-wip-106'
ext.optiqVersion= '0.4.12.4'

group = 'hygrograph'
archivesBaseName = 'hydrograph.server'

buildscript {
  repositories {
  
    jcenter()
  }
  dependencies {
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"
  }
}

version = new Version(major: 0, minor: 1, revision: 1)
gradle.taskGraph.whenReady { taskGraph -> version.release = taskGraph.hasTask(release)
}

task release {
doFirst {
println "Releasing application $version"
		}
}

	
class Version {
	int major, minor, revision
	boolean release
	String toString() {
	release=true
	"$major.$minor.$revision${release ? '' : '-SNAPSHOT'}"
		}
}

task copyRuntimeLibs(type: Copy) {
into "lib"
from configurations.testRuntime
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'http://conjars.org/repo/'
    }
    maven {
        url 'http://maven.twttr.com/'
    }
}

dependencies {
	compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.5.1'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.7'	
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
		
	compile group: 'cascading', name: 'lingual-hadoop2-mr1', version: '1.2.1', classifier:'jdbc'
 
  	compile group: 'com.sparkjava', name: 'spark-core', version: '1.1.1'	
	
	testCompile 'junit:junit:4.11'  
  
 	compile group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: hadoopVersion
}	
	
jar {
  manifest {
  	attributes(
  		'Main-Class': 'hydrograph.server.debug.service.DebugService'
  	)
    attributes(
      "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
    )
    exclude '**/*.properties'
  }
}
 
//ToDo: keep this for test

// task copyToLib(type: Copy) {
//    into "$buildDir/output/lib"
//    from configurations.runtime
//}
	


uploadArchives {  
    repositories {  
        mavenDeployer {  
            repository(url: 'http://10.30.127.67:9091/artifactory/libs-release-local') {  
                authentication(userName: 'admin', password: 'password');  
            }  
            snapshotRepository(url: 'http://10.30.127.67:9091/artifactory/libs-snapshot-local') {
                authentication(userName: 'admin', password: 'password');  
            }  
        }  
    }  
}


