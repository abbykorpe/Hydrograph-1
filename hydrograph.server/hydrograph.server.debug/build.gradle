apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

sourceCompatibility = 1.7
version = '0.1'
ext.hadoopVersion = '2.6.0'
ext.hiveVersion = '1.2.0'
group = 'hygrograph'
archivesBaseName = 'hydrograph.server'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"
    }
}

version = new Version(major: 0, minor: 1, revision: 1)
gradle.taskGraph.whenReady { taskGraph -> version.release = taskGraph.hasTask(release)
}

task release {
doFirst {
println "Releasing application $version"
		}
}
	
class Version {
	int major, minor, revision
	boolean release
	String toString() {
	release=true
	"$major.$minor.$revision${release ? '' : '-SNAPSHOT'}"
		}
}
//ToDo: kept this for copying dependency into lib folder

//task copyRuntimeLibs(type: Copy) {
//into "lib"
//from configurations.testRuntime
//}

repositories {
    mavenLocal()
    mavenCentral() 
    maven {
        url 'http://conjars.org/repo/'
    }
    maven {
        url 'http://maven.twttr.com/'
    }
     maven {
        url 'http://artifactory.bitwiseglobal.net:9091/artifactory/libs-release'
    }
}

dependencies {   
	compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.5.1'
	compile group: 'cascading', name: 'lingual-hadoop2-mr1', version: '1.2.1', classifier:'jdbc'
  	compile group: 'com.sparkjava', name: 'spark-core', version: '2.5.1'
	compile group: 'javax.websocket', name: 'javax.websocket-api', version: '1.1' 
	compile group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: hadoopVersion
	compile (group: 'org.apache.hive', name: 'hive-exec', version: hiveVersion) {
        exclude group: 'com.google.guava'
        exclude group: 'org.apache.curator'
    }
	testCompile 'junit:junit:4.11'
	compile(group: 'cascading', name: 'ojdbc6', version: '11.2.0.4')
	
	testCompile 'junit:junit:4.11' 

}	
	
jar {
  manifest {
  	attributes(
  		'Main-Class': 'hydrograph.server.debug.service.DebugService'
  	)
    attributes(
      "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
    )
    exclude '**/*.properties'
  }
}