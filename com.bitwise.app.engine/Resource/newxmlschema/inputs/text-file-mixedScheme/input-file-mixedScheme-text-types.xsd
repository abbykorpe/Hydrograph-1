<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://www.bitwiseglobal.com/graph/ifmixedscheme" xmlns:cmn="http://www.bitwiseglobal.com/graph/commontypes"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.bitwiseglobal.com/graph/ifmixedscheme"
  elementFormDefault="unqualified"
>
  <xs:import schemaLocation="../../common/common-types.xsd"
    namespace="http://www.bitwiseglobal.com/graph/commontypes" />

  <xs:complexType name="type-mixed-field">
    <xs:complexContent>
      <xs:restriction base="cmn:type-base-field">
        <xs:attributeGroup ref="cmn:grp-attr-base-field" />
        <xs:attribute name="delimiter" type="xs:string" use="optional" />
        <xs:attribute name="length" type="xs:positiveInteger" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="type-mixed-record">
    <xs:complexContent>
      <xs:restriction base="cmn:type-base-record">
        <xs:choice maxOccurs="unbounded" minOccurs="1">
          <xs:element name="field" type="type-mixed-field" />
          <xs:element name="record" type="type-mixed-record" />
        </xs:choice>
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="type-input-mixed-out-socket">
    <xs:complexContent>
      <xs:restriction base="cmn:type-input-outSocket">
        <xs:sequence>
          <xs:element name="schema" type="type-mixed-record" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"
          fixed="out0" />
        <xs:attribute name="type" type="xs:string" fixed="out" use="optional" />
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="type-mixed-base">
    <xs:complexContent>
      <xs:restriction base="cmn:type-input-component">
        <xs:sequence>
          <xs:element name="outSocket" type="type-input-mixed-out-socket"
            minOccurs="1" maxOccurs="1" />
          <xs:element name="dependsOn" type="cmn:type-depends-on"
            minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:restriction>
    </xs:complexContent>
  </xs:complexType>

</xs:schema>