<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://www.bitwiseglobal.com/graph/operationstypes"
	xmlns:cmn="http://www.bitwiseglobal.com/graph/commontypes"
	xmlns:transform="http://www.bitwiseglobal.com/graph/transform"
	xmlns:aggregate="http://www.bitwiseglobal.com/graph/aggregate"
	xmlns:join="http://www.bitwiseglobal.com/graph/join" xmlns:filter="http://www.bitwiseglobal.com/graph/filter"
	xmlns:gen_seq="http://www.bitwiseglobal.com/graph/generatesequence"
	xmlns:cumulate="http://www.bitwiseglobal.com/graph/cumulate"
	xmlns:lookup="http://www.bitwiseglobal.com/graph/lookup"
	xmlns:hashjoin="http://www.bitwiseglobal.com/graph/hashjoin"
	xmlns:normalize="http://www.bitwiseglobal.com/graph/normalize"
	xmlns:pbe="http://www.bitwiseglobal.com/graph/partitionByExpression"
	xmlns:subgraph="http://www.bitwiseglobal.com/graph/subgraph" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.bitwiseglobal.com/graph/operationstypes"
	elementFormDefault="unqualified">
	<xs:import schemaLocation="../common/common-types.xsd"
		namespace="http://www.bitwiseglobal.com/graph/commontypes" />
	<xs:import schemaLocation="./transform/transform-types.xsd"
		namespace="http://www.bitwiseglobal.com/graph/transform" />
	<xs:import schemaLocation="./aggregate/aggregate-types.xsd"
		namespace="http://www.bitwiseglobal.com/graph/aggregate" />
	<xs:import schemaLocation="./join/join-types.xsd"
		namespace="http://www.bitwiseglobal.com/graph/join" />
	<xs:import schemaLocation="./filter/filter-types.xsd"
		namespace="http://www.bitwiseglobal.com/graph/filter" />
	<xs:import schemaLocation="./generate-sequence/generate-sequence-types.xsd"
		namespace="http://www.bitwiseglobal.com/graph/generatesequence" />
	<xs:import schemaLocation="./cumulate/cumulate-types.xsd"
		namespace="http://www.bitwiseglobal.com/graph/cumulate" />
	<xs:import schemaLocation="./lookup/lookup-types.xsd"
		namespace="http://www.bitwiseglobal.com/graph/lookup" />
	<xs:import schemaLocation="./normalize/normalize-types.xsd"
		namespace="http://www.bitwiseglobal.com/graph/normalize" />
	<xs:import schemaLocation="./subgraph/subgraph-types.xsd"
		namespace="http://www.bitwiseglobal.com/graph/subgraph" />
			<xs:import schemaLocation="./hashjoin/hashjoin-types.xsd"
		namespace="http://www.bitwiseglobal.com/graph/hashjoin" />
	<xs:import
		schemaLocation="./partition-by-expression/partition-by-expression-types.xsd"
		namespace="http://www.bitwiseglobal.com/graph/partitionByExpression" />

	<xs:complexType name="transform">
		<xs:complexContent>
			<xs:restriction base="cmn:type-operations-component">
				<xs:sequence>
					<xs:element name="inSocket" type="transform:type-transform-in-socket"
						minOccurs="1" maxOccurs="1" />
					<xs:element name="operation" type="transform:type-transform-operation"
						minOccurs="0" maxOccurs="unbounded" />
					<xs:element name="outSocket" type="transform:type-transform-out-socket"
						minOccurs="1" maxOccurs="1" />
					<xs:element name="runtimeProperties" type="cmn:type-properties"
						minOccurs="0" maxOccurs="1" />
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="subgraph">
		<xs:complexContent>
			<xs:extension base="subgraph:subgraph-base">
				<xs:sequence>
					<xs:element name="path">
						<xs:complexType>
							<xs:attribute name="uri" type="xs:string" use="required" />
						</xs:complexType>
					</xs:element>
					<xs:element name="subgraphParameter" type="cmn:type-properties"
						minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="aggregate">
		<xs:complexContent>
			<xs:extension base="aggregate:aggregate-base">
				<xs:sequence>
					<xs:element name="primaryKeys" type="aggregate:type-primary-key-fields" />
					<xs:element name="secondaryKeys" type="aggregate:type-secondary-key-fields"
						minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="join">
		<xs:complexContent>
			<xs:extension base="join:join-base">
				<xs:sequence>
					<xs:element name="keys" type="join:type-key-fields"
						minOccurs="2" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="filter">
		<xs:complexContent>
			<xs:restriction base="cmn:type-operations-component">
				<xs:sequence>
					<xs:element name="inSocket" type="filter:type-filter-in-socket"
						minOccurs="1" maxOccurs="1" />
					<xs:element name="operation" type="filter:type-filter-operation"
						minOccurs="0" maxOccurs="1" />
					<xs:element name="outSocket" type="filter:type-filter-out-socket"
						minOccurs="1" maxOccurs="2" />
					<xs:element name="runtimeProperties" type="cmn:type-properties"
						minOccurs="0" maxOccurs="1" />
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>


	<xs:complexType name="generateSequence">
		<xs:complexContent>
			<xs:restriction base="cmn:type-operations-component">
				<xs:sequence>
					<xs:element name="inSocket" type="cmn:type-base-inSocket-fixed-in0"
						minOccurs="1" maxOccurs="1" />
					<xs:element name="operation" type="gen_seq:type-operation"
						minOccurs="1" maxOccurs="1" />
					<xs:element name="outSocket" type="gen_seq:type-out-socket"
						minOccurs="1" maxOccurs="1" />
					<xs:element name="runtimeProperties" type="cmn:type-properties"
						minOccurs="0" maxOccurs="1" />
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>


	<xs:complexType name="cumulate">
		<xs:complexContent>
			<xs:extension base="cumulate:cumulate-base">
				<xs:sequence>
					<xs:element name="primaryKeys" type="cumulate:type-primary-key-fields" />
					<xs:element name="secondaryKeys" type="cumulate:type-secondary-key-fields"
						minOccurs="0" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


	<xs:complexType name="lookup">
		<xs:complexContent>
			<xs:extension base="lookup:lookup-base">
				<xs:sequence>
					<xs:element name="keys" type="lookup:type-key-fields"
						minOccurs="2" maxOccurs="unbounded" />
					<xs:element name="match" minOccurs="1" maxOccurs="1" >
						<xs:complexType>
							<xs:attribute name="value" type="cmn:match_value"
								 default="first" />
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


	<xs:complexType name="hashJoin">
		<xs:complexContent>
			<xs:extension base="hashjoin:hashjoin-base">
				<xs:sequence>
					<xs:element name="keys" type="hashjoin:type-key-fields"
						minOccurs="2" maxOccurs="unbounded" />
					<xs:element name="match" minOccurs="1" maxOccurs="1" >
						<xs:complexType>
							<xs:attribute name="value" type="cmn:match_value"
								 default="first" />
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


	<xs:complexType name="normalize">
		<xs:complexContent>
			<xs:restriction base="cmn:type-operations-component">
				<xs:sequence>
					<xs:element name="inSocket" type="normalize:type-in-socket"
						minOccurs="1" maxOccurs="1" />
					<xs:element name="operation" type="normalize:type-operation"
						minOccurs="0" maxOccurs="unbounded" />
					<xs:element name="outSocket" type="normalize:type-out-socket"
						minOccurs="1" maxOccurs="1" />
					<xs:element name="runtimeProperties" type="cmn:type-properties"
						minOccurs="0" maxOccurs="1" />
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="partitionByExpression">
		<xs:complexContent>
			<xs:extension base="pbe:partitionByExpression-base">
				<xs:sequence>
					<xs:element name="noOfPartitions" minOccurs="1"
						maxOccurs="1">
						<xs:complexType>
							<xs:attribute name="value" type="xs:long" use="required" />
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>


</xs:schema>
