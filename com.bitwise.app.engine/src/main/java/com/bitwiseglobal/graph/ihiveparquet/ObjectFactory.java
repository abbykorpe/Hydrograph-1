//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.03 at 12:05:43 PM IST 
//


package com.bitwiseglobal.graph.ihiveparquet;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.bitwiseglobal.graph.ihiveparquet package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.bitwiseglobal.graph.ihiveparquet
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link HivePathType }
     * 
     */
    public HivePathType createHivePathType() {
        return new HivePathType();
    }

    /**
     * Create an instance of {@link HiveType }
     * 
     */
    public HiveType createHiveType() {
        return new HiveType();
    }

    /**
     * Create an instance of {@link HivePartitionFieldsType }
     * 
     */
    public HivePartitionFieldsType createHivePartitionFieldsType() {
        return new HivePartitionFieldsType();
    }

    /**
     * Create an instance of {@link TypeInputDelimitedOutSocket }
     * 
     */
    public TypeInputDelimitedOutSocket createTypeInputDelimitedOutSocket() {
        return new TypeInputDelimitedOutSocket();
    }

    /**
     * Create an instance of {@link FieldBasicType }
     * 
     */
    public FieldBasicType createFieldBasicType() {
        return new FieldBasicType();
    }

    /**
     * Create an instance of {@link TypeInputFileDelimitedBase }
     * 
     */
    public TypeInputFileDelimitedBase createTypeInputFileDelimitedBase() {
        return new TypeInputFileDelimitedBase();
    }

}
