apply plugin: 'java'

sourceCompatibility = 1.7
version = '1.0'
ext.cascadingVersion = '3.0.1'
ext.hadoopVersion = '2.6.0'
ext.hiveVersion = '1.2.0'
def mainClassName='com.bitwiseglobal.bhse.utilities.BHSExecution'
repositories {
	maven {
    	url "http://10.30.127.67:9091/artifactory/libs-release-local"
    }
   mavenLocal() 
     mavenCentral()
  maven {
    url 'http://conjars.org/repo/'
	}
  maven {
    url 'http://maven.twttr.com/'
	}
 
    
}  
  
dependencies {
     compile(group: 'elt-bhs', name: 'elt-bhs', version: 'elt-bhs')
       compile group: 'cascading', name: 'cascading-core', version: cascadingVersion
  compile group: 'cascading', name: 'cascading-hadoop2-mr1', version: cascadingVersion //required for plunger
  compile group: 'cascading', name: 'cascading-local', version: cascadingVersion //required for plunger
  //compile group: 'cascading', name: 'cascading-hadoop', version: cascadingVersion //using hadoop2-mr1 instead
  
  compile group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoopVersion //required for plunger
  //compile group: 'org.apache.hadoop', name: 'hadoop-core', version: hadoopVersion //commented as winhack jar added
  //mvn install:install-file -Dfile=hadoop-core-winhack-1.0.4.jar -DpomFile=hadoop-core-winhack-1.0.4.pom -DgroupId=com.bitwiseglobal -DartifactId=hadoop-core-winhack -Dversion=1.0.4 -Dpackaging=jar
  //compile 'com.bitwiseglobal:hadoop-core-winhack:1.0.4'
  
  compile group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-common', version: hadoopVersion
  //compile group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoopVersion //required for plunger
  compile 'org.fluttercode.datafactory:datafactory:0.8'
  
  compile group: 'cascading', name: 'cascading-hive', version: '2.0.0'
  compile (group: 'org.apache.hive', name: 'hive-exec', version: hiveVersion) 
  {exclude group: 'com.google.guava'
  exclude group: 'org.apache.curator'
  }

}

task copyToLib(dependsOn:build,type: Copy) {
    into "C:/Users/rahulma/Desktop/bhs/joblib"
    from configurations.runtime
}

def jarFiles = files { file('C:/Users/rahulma/Desktop/bhs/joblib/').listFiles() }

test {
     testLogging.showStandardStreams = true
} 

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}    
			

task(runJob, dependsOn: 'classes', type: JavaExec){	
		    main=mainClassName
	   		standardOutput = System.out
  			errorOutput = System.err
			classpath += jarFiles
 			args = ["-xmlpath","C:/Users/rahulma/Desktop/build_gradle/generate_record_test.xml" ]
		  	systemProperty 'componentAssemblyMap.properties', 'C:/Users/rahulma/Desktop/bhs/config/java/componentAssemblyMap.properties'	
			systemProperty 'engine.properties','C:/Users/rahulma/Desktop/bhs/config/java/engine.properties'
			systemProperty 'componentAssemblyMap.properties','C:/Users/rahulma/Desktop/bhs/config/java/componentAssemblyMap.properties'
			systemProperty 'engine.properties','C:/Users/rahulma/Desktop/bhs/config/java/engine.properties'
			systemProperty 'input_service.properties','C:/Users/rahulma/Desktop/bhs/config/java/input_service.properties'
			systemProperty 'runtime_service.properties','C:/Users/rahulma/Desktop/bhs/config/java/runtime_service.properties'
			systemProperty 'xpath.properties','C:/Users/rahulma/Desktop/bhs/config/java/xpath.properties'
			systemProperty 'traversal_service.properties','C:/Users/rahulma/Desktop/bhs/config/java/traversal_service.properties'
 
}
