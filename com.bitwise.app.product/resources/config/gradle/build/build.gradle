apply plugin: 'java'
sourceCompatibility = 1.7
version = '1.0'

repositories {
    maven {
        url "http://10.30.127.67:9091/artifactory/libs-release"
    }
}


configurations {
    sshAntTask
}
configurations {
    compile
}

dependencies {
    sshAntTask 'org.apache.ant:ant-jsch:1.9.4'
}

sourceSets {
    main {
        java.srcDir 'src'
    }
}

Properties properties = new Properties()
def buildProperty = project.projectDir.path + '/build.properties'
File propertiesFile = new File(buildProperty)
propertiesFile.withInputStream {
    properties.load(propertiesFile.newDataInputStream())
}

dependencies {
    compile(group: 'engine', name: 'bhs', version: '1.0.6')
}

task scpJarFiles() {

    doLast {
        println 'Copying library files...'

        ant.taskdef(
                name: 'scp',
                classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
                classpath: configurations.sshAntTask.asPath)

        def jarFile
        def jarName
        def jarFiles = files {
            file(project.libsDir.path).listFiles()
        }

        jarFiles.each {
            File file ->
                jarFile = file.absolutePath
                jarName = file.name
        }

        ant.scp(
                file: jarFile,
                todir: "${username}@${host}:" + properties.remoteLibDir,
                password: password,
                trust: true,
        )
    }
}

scpJarFiles.onlyIf {
    project.hasProperty('host')
    project.hasProperty('username')
    project.hasProperty('password')
}

task scpJobXML() {
    doLast {
        ant.taskdef(
                name: 'scp',
                classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
                classpath: configurations.sshAntTask.asPath)


        println 'Copying XML files...'
        ant.scp(
                file: jobXML,
                todir: "${username}@${host}:" + properties.remoteJobXMLDir,
                password: password,
                trust: true,
        )
    }
}

scpJobXML.onlyIf {
    project.hasProperty('host')
    project.hasProperty('username')
    project.hasProperty('password')
    project.hasProperty('jobXML');
}

task scpParameterFile() {
    doLast {
        println 'Copying Parameter files...'
        ant.taskdef(
                name: 'scp',
                classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
                classpath: configurations.sshAntTask.asPath)

        ant.scp(
                file: parameterFile,
                todir: "${username}@${host}:" + properties.remoteParameterFileDir,
                password: password,
                trust: true,
        )
    }
}

scpParameterFile.onlyIf {
    project.hasProperty('host')
    project.hasProperty('username')
    project.hasProperty('password')
    project.hasProperty('parameterFile');
}


task executeRemoteJob() {
    doLast {
        ant.taskdef(
                name: 'sshexec',
                classname: 'org.apache.tools.ant.taskdefs.optional.ssh.SSHExec',
                classpath: configurations.sshAntTask.asPath)

        println "Executing remote job..."

        def jarFile
        def jarName
        def jarFiles = files {
            file(project.libsDir.path).listFiles()
        }

        jarFiles.each {
            File file ->
                jarFile = file.absolutePath
                jarName = file.name
        }


        def xmlFileName = jobXML.substring(jobXML.lastIndexOf("/") + 1);
        def parameterFileName = parameterFile.substring(parameterFile.lastIndexOf("/") + 1);


        println 'executing command - ' + properties.runUtility + " -xmlpath " + properties.remoteJobXMLDir + "/" + xmlFileName + " -libjars " + properties.remoteLibDir + "/" + jarName + " -paramfiles " + properties.remoteParameterFileDir + "/" + parameterFileName

        ant.sshexec(
                host: host,
                username: username,
                password: password,
                trust: true,
                command: properties.runUtility + " -xmlpath " + properties.remoteJobXMLDir + "/" + xmlFileName + " -libjars " + properties.remoteLibDir + "/" + jarName + " -paramfiles " + properties.remoteParameterFileDir + "/" + parameterFileName
        )
    }
}

executeRemoteJob.onlyIf {
    project.hasProperty('host')
    project.hasProperty('username')
    project.hasProperty('password')
    project.hasProperty('jobXML')
    project.hasProperty('parameterFile');
}